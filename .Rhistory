main = paste(unique(ind1$State[ind1$state.id == i])),
cex.main = 0.9,
col = "blue")
abline(v = 0,
col = "darkgrey",
lty = 2,
lwd = 2)
axis(1, at = c(-.5, 0, .5),
cex.axis = 0.8)
#And compare to the ladies
lines(density(extract(fit2)$beta[,i]),
col = "red")
}
dense <- list()
for(i in 1:30){
plotter <- ggplot(beta_male,
aes(beta_male[,i] )) +
public + geom_density()  + xlim(-0.5,0.5) + ylim(0,9.5) +
geom_density(data = beta_female, aes(beta_female[,i]), colour = jbpal$green) +
labs(x = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
geom_vline(xintercept = 0, alpha = 0.2, linetype = 2) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_blank(),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major = element_blank())
dense[[i]] <- plotter
}
ggsave("betas.pdf", plot = grid.arrange(grobs = dense, nrow = 6, ncol = 5), width = 17, height = 8.5)
dense <- list()
for(i in 1:30){
plotter <- ggplot(beta_male,
aes(beta_male[,i] )) +
public + geom_density()  + xlim(-0.5,0.5) + ylim(0,9.5) +
geom_density(data = beta_female, aes(beta_female[,i]), colour = jbpal$green) +
labs(x = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
geom_vline(xintercept = 0, alpha = 0.4, linetype = 2) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_blank(),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major = element_blank())
dense[[i]] <- plotter
}
ggsave("betas.pdf", plot = grid.arrange(grobs = dense, nrow = 6, ncol = 5), width = 17, height = 8.5)
alpha.per <- colMeans(extract(fit1)$alpha_t[,1:8])
alpha.per.upper <- NULL
alpha.per.lower <- NULL
for(i in 1:8){
alpha.per.upper[i] <- quantile(extract(fit1)$alpha_t[,i], 0.25)
alpha.per.lower[i] <- quantile(extract(fit1)$alpha_t[,i], 0.75)
}
par(mfrow = c(1, 1))
plot(c(2005:2012), alpha.per,
xlim = c(2005, 2012),
ylim = c(0, 40),
pch = 16,
cex = 0.6,
xlab = "Years",
ylab = "Time Intercept")
abline(0, 1)
arrows(x0 = c(2005:2012),
y0 = alpha.per,
x1 = c(2005:2012),
y1 = alpha.per.upper,
length = 0,
col = "darkgrey")
arrows(x0 = c(2005:2012),
y0 = alpha.per,
x1 = c(2005:2012),
y1 = alpha.per.lower,
length = 0,
col = "darkgrey")
points(c(2005:2012), alpha.per,
pch = 16,
cex = 0.6)
alpha.female <- exp(colMeans(extract(fit2)$alpha_t[,1:8]))
alpha.male <- exp(colMeans(extract(fit3)$alpha_t[,1:8]))
alpha.female.upper <- NULL
alpha.female.lower <- NULL
alpha.male.upper <- NULL
alpha.male.lower <- NULL
for(i in 1:8){
alpha.female.upper[i] <- exp(quantile(extract(fit2)$alpha_t[,i], 0.25))
alpha.female.lower[i] <- exp(quantile(extract(fit2)$alpha_t[,i], 0.75))
alpha.male.upper[i] <- exp(quantile(extract(fit3)$alpha_t[,i], 0.25))
alpha.male.lower[i] <- exp(quantile(extract(fit3)$alpha_t[,i], 0.75))
}
par(mfrow = c(1, 2))
plot(c(2005:2012), alpha.male,
xlim = c(2005, 2012),
ylim = c(-20, 300),
pch = 16,
cex = 0.6,
main = "Male Time Intercept",
xlab = "Years",
ylab = "Time Intercept")
abline(0, 1)
arrows(x0 = c(2005:2012),
y0 = alpha.male,
x1 = c(2005:2012),
y1 = alpha.male.upper,
length = 0,
col = "darkgrey")
arrows(x0 = c(2005:2012),
y0 = alpha.male,
x1 = c(2005:2012),
y1 = alpha.male.lower,
length = 0,
col = "darkgrey")
points(c(2005:2012), alpha.male,
pch = 16,
cex = 0.6)
plot(c(2005:2012), alpha.female,
xlim = c(2005, 2012),
ylim = c(-20, 300),
pch = 16,
cex = 0.6,
main = "Female Time Intercept",
xlab = "Years",
ylab = "Time Intercept")
abline(0, 1)
arrows(x0 = c(2005:2012),
y0 = alpha.female,
x1 = c(2005:2012),
y1 = alpha.female.upper,
length = 0,
col = "darkgrey")
arrows(x0 = c(2005:2012),
y0 = alpha.female,
x1 = c(2005:2012),
y1 = alpha.female.lower,
length = 0,
col = "darkgrey")
points(c(2005:2012), alpha.female,
pch = 16,
cex = 0.6)
par(mfrow = c(1, 1))
plot(c(2005:2012), alpha.per,
xlim = c(2005, 2012),
ylim = c(0, 40),
pch = 16,
cex = 0.6,
xlab = "Years",
ylab = "Time Intercept")
abline(0, 1)
arrows(x0 = c(2005:2012),
y0 = alpha.per,
x1 = c(2005:2012),
y1 = alpha.per.upper,
length = 0,
col = "darkgrey")
arrows(x0 = c(2005:2012),
y0 = alpha.per,
x1 = c(2005:2012),
y1 = alpha.per.lower,
length = 0,
col = "darkgrey")
points(c(2005:2012), alpha.per,
pch = 16,
cex = 0.6)
plot(c(2005:2012), alpha.per,
xlim = c(2005, 2012),
ylim = c(0, 40),
pch = 16,
cex = 0.6,
xlab = "Years",
ylab = "Time Intercept")
abline(0, 1)
arrows(x0 = c(2005:2012),
y0 = alpha.per,
x1 = c(2005:2012),
y1 = alpha.per.upper,
length = 0,
col = "darkgrey")
arrows(x0 = c(2005:2012),
y0 = alpha.per,
x1 = c(2005:2012),
y1 = alpha.per.lower,
length = 0,
col = "darkgrey")
points(c(2005:2012), alpha.per,
pch = 16,
cex = 0.6)
alpha.per
ind$Year
alphas <- data.frame(c(2005:2012), alpha.per, alpha.per.upper, alpha.per.lower)
alphas
alphas <- data.frame(year = c(2005:2012), alpha.per, alpha.per.upper, alpha.per.lower)
alphas
ggplot(alphas, aes(year, alpha.per)) + geom_point()
ggplot(alphas, aes(year, alpha.per)) + geom_point() + geom_errorbar(alphas, aes(x = year, y = alpha.per, ymin = alpha.per.lower, ymax = alpha.per.upper))
ggplot(alphas, aes(year, alpha.per)) + geom_point() + geom_errorbar(alphas, aes(x = year, y = alpha.per, ymin = alpha.per.lower, ymax = alpha.per.upper))
alphas
ggplot(alphas, aes(year, alpha.per)) + geom_point() +
geom_errorbar(alphas, aes(x = year, y = alpha.per, ymin = alpha.per.lower, ymax = alpha.per.upper))
ggplot(alphas, aes(year, alpha.per)) + geom_point() #+
ggplot(alphas, aes(year, alpha.per)) + geom_point() +
geom_errorbar(alphas, aes(ymin = alpha.per.lower, ymax = alpha.per.upper))
alphas
alphas$year
alphas$alpha.per.lower
ggplot(alphas, aes(year, alpha.per)) + geom_point() +
geom_errorbar(alphas, aes(x = alphas$year, y = alphas$alpha.per, ymin = alphas$alpha.per.lower, ymax = alphas$alpha.per.upper))
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) +
geom_errorbar(alphas, aes(x = alphas$year, y = alphas$alpha.per, ymin = alphas$alpha.per.lower, ymax = alphas$alpha.per.upper))
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35))
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) +
geom_errorbar(alphas, aes(x = alphas$year, y = alphas$alpha.per, ymin = alphas$alpha.per.lower, ymax = alphas$alpha.per.upper))
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) + geom_errorbar()
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) + geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper)
ggplot(alphas, aes(year, alpha.per)) + geom_point() +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper)
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1)
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1) + scale_x_continuous(breaks = c(2005:2012)) + theme(panel.grid.major = element_blank)
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1) + scale_x_continuous(breaks = c(2005:2012)) + theme(panel.grid.major = element_blank())
ggplot(alphas, aes(year, alpha.per)) + geom_point() + ylim(c(0,35)) + public +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1) + scale_x_continuous(breaks = c(2005:2012)) + theme(panel.grid.major = element_blank()) + ggtitle("Time Intercepts") + labs(x = "Year", y = "Intercept")
ggsave("alphas.pdf", plot = grid.arrange(grobs = dense, nrow = 6, ncol = 5), width = 17, height = 8.5)
ggsave("alphas.pdf", width = 17, height = 8.5)
ggplot(alphas, aes(year, alpha.per)) + geom_point(size = 3) + ylim(c(0,35)) + public +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1) + scale_x_continuous(breaks = c(2005:2012)) + theme(panel.grid.major = element_blank()) + ggtitle("Time Intercepts") + labs(x = "Year", y = "Intercept")
ggsave("alphas.pdf", width = 17, height = 8.5)
ggplot(alphas, aes(year, alpha.per))  + ylim(c(0,35)) + public +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1) + scale_x_continuous(breaks = c(2005:2012)) + theme(panel.grid.major = element_blank()) + ggtitle("Time Intercepts") + labs(x = "Year", y = "Intercept") + geom_point(size = 3)
ggsave("alphas.pdf", width = 17, height = 8.5)
healthexp2 <- list()
for(i in 1:30){
plotter <- ggplot(subset(ind,ind$state.id == i), aes(Year, percap) ) + public + geom_line() +
geom_text(x = 2005 + 0.25, y = round(min(ind[ind$state.id == i & ind$Year == 2005,]$percap)) + 350, label = round(min(ind[ind$Year == 2005 & ind$state.id == i ,]$percap)), size = 2) +
geom_text(x = 2012 - 0.25, y = round(max(ind[ind$state.id == i & ind$Year == 2012,]$percap)) + 350, label = round(max(ind[ind$Year == 2012 & ind$state.id == i ,]$percap)), size = 2) +
scale_x_continuous(breaks = c(2005, 2012)) +
scale_y_continuous(breaks = c(0, 3000 ), limits = c(0,3000) ) +
labs(x = 'Year', y = 'Health Exp', title = unique(ind$State[ind$state.id == i])) +
theme(axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7),
plot.title = element_text(size = 13),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
panel.grid.major = element_blank())
healthexp2[[i]] <- plotter
}
ggsave("HexpTime.pdf", plot = grid.arrange(grobs = healthexp2, nrow = 6, ncol = 5), width = 17, height = 8.5)
for(i in 1:30){
plotter <- ggplot(subset(ind,ind$state.id == i), aes(Year, percap) ) + public + geom_line() +
geom_text(x = 2005 + 0.25, y = round(min(ind[ind$state.id == i & ind$Year == 2005,]$percap)) + 350, label = round(min(ind[ind$Year == 2005 & ind$state.id == i ,]$percap)), size = 2) +
geom_text(x = 2012 - 0.25, y = round(max(ind[ind$state.id == i & ind$Year == 2012,]$percap)) + 350, label = round(max(ind[ind$Year == 2012 & ind$state.id == i ,]$percap)), size = 2) +
scale_x_continuous(breaks = c(2005, 2012)) +
scale_y_continuous(breaks = c(0, 3000 ), limits = c(0,3100) ) +
labs(x = 'Year', y = 'Health Exp', title = unique(ind$State[ind$state.id == i])) +
theme(axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7),
plot.title = element_text(size = 13),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
panel.grid.major = element_blank())
healthexp2[[i]] <- plotter
}
ggsave("HexpTime.pdf", plot = grid.arrange(grobs = healthexp2, nrow = 6, ncol = 5), width = 17, height = 8.5)
ind2 <- ind
ind2$State <- factor(ind2$State)
ind2$State <- factor(ind2$State, levels = ind2$State[order(ind2$Person[ind2$Year == 2012])])
IMR0512 <- ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
public  + geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
ggsave("IMR0512.pdf", plot = IMR0512, width = 17, height = 8.5)
IMR0512
rm(list=ls())
source("https://raw.githubusercontent.com/julbautista/Startup/master/julian_startup.R")
setwd("C:/Users/Julian Bautista/Documents/Portfolio/India Project")
df <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/India_Data.csv", header = T, skip = 2)
df <- df[df$Year != 2003,]
df <- df[df$State != "Andaman & Nicobar Islands"
& df$State != "Dadra & Nagar Haveli"
& df$State != "Daman & Diu"
& df$State != "Lakshadweep"
& df$State != "Chandigarh",]
df$State <- as.character(df$State)
df$State[df$State == "Odisha"] <- "Orissa"
df$State[df$State == "Chhatisgarh"] <- "Chhattisgarh"
pop <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/population.csv", header = TRUE)
pop <- pop[pop$State != "Andaman and Nicobar Islands"
& pop$State != "Dadra and Nagar Haveli"
& pop$State != "Daman and Diu"
& pop$State != "Lakshadweep"
& pop$State != "Chandigarh",]
ind <- merge(df, pop)
pop.func <- function(year, pop2011){
pop <- NULL
pop <- ifelse(year > 2011,
pop2011*(1.0184^(year - 2011)),
ifelse(year < 2011,
pop2011*((1/1.0184)^(2011 - year)),
pop2011))
return(pop)
}
ind$population <- pop.func(ind$Year, ind$X2011pop)
ind <- ind[,-8]
rm(df,pop)
ind$exp.rup <- NULL
for(i in 1:length(ind[,1])){
ind$exp.rup[i] <- ifelse(ind$Units[i] == "Lakh",
ind$Health.Exp[i]*100000,
ind$Health.Exp[i]*1000000)
}
ind$percap <- ind$exp.rup/ind$population
ind$fm.imr <- ind$Female/ind$Male
plot(lm(fm.imr ~ percap, data = ind))
ind2 <- ind
ind2$State <- factor(ind2$State)
ind2$State <- factor(ind2$State, levels = ind2$State[order(ind2$Person[ind2$Year == 2012])])
IMR0512 <- ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
public  + geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
ggsave("IMR0512.pdf", plot = IMR0512, width = 17, height = 8.5)
IMR0512
ind2
ind
ind2 <- ind
ind2
str(ind2$State)
ind2$State <- factor(ind2$State)
ind2$State
str(ind2$State)
factor(ind2$State, levels = ind2$State[order(ind2$Person[ind2$Year == 2012])])
ind2$State
factor(ind2$State, levels = ind2$State[order(ind2$Person[ind2$Year == 2012])])
ind$State[33]
ind$State[34]
rm(list=ls())
source("https://raw.githubusercontent.com/julbautista/Startup/master/julian_startup.R")
setwd("C:/Users/Julian Bautista/Documents/Portfolio/India Project")
df <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/India_Data.csv", header = T, skip = 2)
df <- df[df$Year != 2003,]
df <- df[df$State != "Andaman & Nicobar Islands"
& df$State != "Dadra & Nagar Haveli"
& df$State != "Daman & Diu"
& df$State != "Lakshadweep"
& df$State != "Chandigarh",]
df$State <- as.character(df$State)
df$State[df$State == "Odisha"] <- "Orissa"
df$State[df$State == "Chhatisgarh"] <- "Chhattisgarh"
pop <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/population.csv", header = TRUE)
pop <- pop[pop$State != "Andaman and Nicobar Islands"
& pop$State != "Dadra and Nagar Haveli"
& pop$State != "Daman and Diu"
& pop$State != "Lakshadweep"
& pop$State != "Chandigarh",]
ind <- merge(df, pop)
pop.func <- function(year, pop2011){
pop <- NULL
pop <- ifelse(year > 2011,
pop2011*(1.0184^(year - 2011)),
ifelse(year < 2011,
pop2011*((1/1.0184)^(2011 - year)),
pop2011))
return(pop)
}
ind$population <- pop.func(ind$Year, ind$X2011pop)
ind <- ind[,-8]
rm(df,pop)
ind$exp.rup <- NULL
for(i in 1:length(ind[,1])){
ind$exp.rup[i] <- ifelse(ind$Units[i] == "Lakh",
ind$Health.Exp[i]*100000,
ind$Health.Exp[i]*1000000)
}
ind$percap <- ind$exp.rup/ind$population
ind$fm.imr <- ind$Female/ind$Male
ind <- ind[order(ind$Year),]
ind <- within(ind, state.id <- match(State, unique(State)))
ind <- within(ind, year.id <- match(Year, unique(Year)))
ind2 <- ind
ind2$State <- factor(ind2$State)
ind2$State <- factor(ind2$State, levels = ind2$State[order(ind2$Person[ind2$Year == 2012])])
IMR0512 <- ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
public  + geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
ggsave("IMR0512.pdf", plot = IMR0512, width = 17, height = 8.5)
IMR0512
rm(ind2)
ggsave("IMR0512.svg", plot = IMR0512, width = 17, height = 8.5)
ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
public  + geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
#jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
ind2 <- ind
ind2$State <- factor(ind2$State)
ind2$State <- factor(ind2$State, levels = ind2$State[order(ind2$Person[ind2$Year == 2012])])
IMR0512 <- ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
public  + geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
#jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
IMR0512 <- ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
#public  +
geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
#jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
IMR0512
ggsave("IMR0512.svg", plot = IMR0512, width = 17, height = 8.5)
ggsave("IMR0512.pdf", plot = IMR0512, width = 17, height = 8.5)
IMR0512 <- ggplot(ind2[ind2$Year == 2012| ind2$Year == 2005,], aes(Person, State, colour = factor(Year), fill = factor(Year))) +
ggtitle("Infant Mortality Rate per State, 2012 and 2005") +
public  +
geom_dotplot(binaxis = "y", dotsize = 0.35) +
labs(x = 'IMR', y = "") +
jbcol + jbfill +
theme(legend.title = element_blank(), panel.grid.major.x = element_blank(),
axis.line = element_blank(),
axis.text = element_text(colour = "#222222", family = "Open Sans", size = 14),
legend.text = element_text(colour = "#222222", family = "Open Sans", size = 20))
IMR0512
pool <- ind %>% group_by(Year) %>% summarise(poolIMR = mean(Person), poolHexp = mean(percap))
ggplot(pool, aes(poolHexp, poolIMR, label = Year)) + public +
geom_smooth(alpha = 0.12, method = 'lm') +
geom_text_repel(segment.color = jbpal$green, point.padding = unit(1.5, "lines"), size = 5) +
geom_point(size = 2.5) + ggtitle("Pooled IMR and Health Exp") +
xlab("Health Expenditure") + ylab("Infant Mortality")
pool <- ind %>% group_by(Year) %>% summarise(poolIMR = mean(Person), poolHexp = mean(percap))
ggplot(pool, aes(poolHexp, poolIMR, label = Year)) + public +
geom_smooth(alpha = 0.12, method = 'lm') +
geom_text_repel(segment.color = jbpal$green, point.padding = unit(1.5, "lines"), size = 5) +
geom_point(size = 2.5) + ggtitle("Pooled IMR and Health Exp") +
xlab("Health Expenditure") + ylab("Infant Mortality")
ind
pool
source("https://raw.githubusercontent.com/julbautista/Startup/master/julian_startup.R")
setwd("C:/Users/Julian Bautista/Documents/Portfolio/India Project")
df <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/India_Data.csv", header = T, skip = 2)
df <- df[df$Year != 2003,]
df <- df[df$State != "Andaman & Nicobar Islands"
& df$State != "Dadra & Nagar Haveli"
& df$State != "Daman & Diu"
& df$State != "Lakshadweep"
& df$State != "Chandigarh",]
df$State <- as.character(df$State)
df$State[df$State == "Odisha"] <- "Orissa"
df$State[df$State == "Chhatisgarh"] <- "Chhattisgarh"
pop <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/population.csv", header = TRUE)
pop <- pop[pop$State != "Andaman and Nicobar Islands"
& pop$State != "Dadra and Nagar Haveli"
& pop$State != "Daman and Diu"
& pop$State != "Lakshadweep"
& pop$State != "Chandigarh",]
ind <- merge(df, pop)
pop.func <- function(year, pop2011){
pop <- NULL
pop <- ifelse(year > 2011,
pop2011*(1.0184^(year - 2011)),
ifelse(year < 2011,
pop2011*((1/1.0184)^(2011 - year)),
pop2011))
return(pop)
}
ind$population <- pop.func(ind$Year, ind$X2011pop)
ind <- ind[,-8]
rm(df,pop)
ind$exp.rup <- NULL
for(i in 1:length(ind[,1])){
ind$exp.rup[i] <- ifelse(ind$Units[i] == "Lakh",
ind$Health.Exp[i]*100000,
ind$Health.Exp[i]*1000000)
}
ind$percap <- ind$exp.rup/ind$population
ind$fm.imr <- ind$Female/ind$Male
ind <- ind[order(ind$Year),]
ind <- within(ind, state.id <- match(State, unique(State)))
ind <- within(ind, year.id <- match(Year, unique(Year)))
pool <- ind %>% group_by(Year) %>% summarise(poolIMR = mean(Person), poolHexp = mean(percap))
pool
ind$Year
library(tidyverse)
