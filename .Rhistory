source("https://raw.githubusercontent.com/julbautista/Startup/master/julian_startup.R")
setwd("C:/Users/Julian Bautista/Documents/Portfolio/India Project")
df <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/India_Data.csv", header = T, skip = 2)
df <- df[df$Year != 2003,]
df <- df[df$State != "Andaman & Nicobar Islands"
& df$State != "Dadra & Nagar Haveli"
& df$State != "Daman & Diu"
& df$State != "Lakshadweep"
& df$State != "Chandigarh",]
df$State <- as.character(df$State)
df$State[df$State == "Odisha"] <- "Orissa"
df$State[df$State == "Chhatisgarh"] <- "Chhattisgarh"
pop <- read.csv("https://raw.githubusercontent.com/julbautista/India-Project/master/population.csv", header = TRUE)
pop <- pop[pop$State != "Andaman and Nicobar Islands"
& pop$State != "Dadra and Nagar Haveli"
& pop$State != "Daman and Diu"
& pop$State != "Lakshadweep"
& pop$State != "Chandigarh",]
ind <- merge(df, pop)
pop.func <- function(year, pop2011){
pop <- NULL
pop <- ifelse(year > 2011,
pop2011*(1.0184^(year - 2011)),
ifelse(year < 2011,
pop2011*((1/1.0184)^(2011 - year)),
pop2011))
return(pop)
}
ind$population <- pop.func(ind$Year, ind$X2011pop)
ind <- ind[,-8]
rm(df,pop)
ind$exp.rup <- NULL
for(i in 1:length(ind[,1])){
ind$exp.rup[i] <- ifelse(ind$Units[i] == "Lakh",
ind$Health.Exp[i]*100000,
ind$Health.Exp[i]*1000000)
}
ind$percap <- ind$exp.rup/ind$population
ind$fm.imr <- ind$Female/ind$Male
ind <- ind[order(ind$Year),]
ind <- within(ind, state.id <- match(State, unique(State)))
ind <- within(ind, year.id <- match(Year, unique(Year)))
ind3 <- ind %>% group_by(state.id) %>% mutate(lag.exp = c(NA, percap[-length(percap)]))
ind3
ind3$lag.exp
ind1 <- ind3[ind3$Year != 2005,]
rm(list = ls())
source("04 Lagged Models.R")
rm(list = ls())
source("04 Lagged Models.R")
rm(list = ls())
source("04 Lagged Models.R")
str(ind1)
fit2 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
year_id <- ind1$year.id
state_id <- ind1$state.id
rm(list = ls())
source("04 Lagged Models.R")
ind1$y.lower2
beta_male <- data.frame(extract(fitm)$beta)
beta_female <- data.frame(extract(fit1)$beta)
dense <- list()
for(i in 1:30){
dense[[i]] <- ggplot(beta_male,
aes_(x = beta_male[,i] )) +
public + geom_density()  + xlim(-0.5,0.5) + ylim(0,9.5) +
#geom_density(data = beta_female, aes_(x = beta_female[,i]), colour = jbpal$green) +
geom_density(data = beta_female, aes_(x = beta_female[,i]), colour = jbpal$red) +
labs(x = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
geom_vline(xintercept = 0, alpha = 0.4, linetype = 2) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_blank(),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major = element_blank())
}
ggsave("standardbetas.pdf", plot = grid.arrange(grobs = dense, nrow = 6, ncol = 5), width = 17, height = 8.5)
year_id <- ind1$year.id
state_id <- ind1$state.id
imr <- log(ind1$Female)
percap <- log(ind1$lag.exp)
N <- length(imr)
fit2 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit2, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
ind1$y.upper2 <- NULL
ind1$y.lower2 <- NULL
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
ind1$y.lower2
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
ind1$y.lower2
ind1$pred2 <- exp(colMeans(extract(fit2)$y_pred))
rm(list = ls())
source("01 Data Munging.R")
year_id <- ind1$year.id
state_id <- ind1$state.id
imr <- log(ind1$Female)
percap <- log(ind1$lag.exp)
N <- length(imr)
fit2 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit2, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
ind1$y.upper2 <- NULL
ind1$y.lower2 <- NULL
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
ind1$y.upper2 <- NULL
ind1$y.lower2 <- NULL
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
ind1$y.upper2 <- NULL
ind1$y.lower2 <- NULL
rm(ind1$y.lower2)
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
ind1
glimpse(ind1)
glimpse(ind)
year_id <- ind$year.id
state_id <- ind$state.id
imr <- (ind$Female)
percap <- ind$percap
N <- length(imr)
fit1 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit1, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
ind$y.upper <- NULL
ind$y.lower <- NULL
for(i in 1:240){
ind$y.lower[i] <- quantile(extract(fit1)$y_pred[,i], 0.25)
ind$y.upper[i] <- quantile(extract(fit1)$y_pred[,i], 0.75)
}
year_id <- ind1$year.id
state_id <- ind1$state.id
year_id <- ind1$year.id
imr <- log(ind1$Female)
percap <- log(ind1$lag.exp)
N <- length(imr)
N
length(state_id)
year_id <- ind$year.id
state_id <- ind$state.id
imr <- (ind$Female)
percap <- ind$percap
N <- length(imr)
fit1 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit1, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
#extract quantiles---------------------
ind$y.upper <- NULL
ind$y.lower <- NULL
for(i in 1:240){
ind$y.lower[i] <- quantile(extract(fit1)$y_pred[,i], 0.25)
ind$y.upper[i] <- quantile(extract(fit1)$y_pred[,i], 0.75)
}
year_id <- ind1$year.id
state_id <- ind1$state.id
imr <- log(ind1$Female)
percap <- log(ind1$lag.exp)
N <- length(imr)
N
ind1$y.upper2 <- NULL
ind1$y.lower2 <- NULL
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
ind1$y.upper2 <- NULL
ind1$y.upper2
ind1$y.upper2 <- NA
ind1$y.upper2
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
beta_male <- data.frame(extract(fitm)$beta)
source("03 Standard Model.R")
rm(list = ls())
source("01 Data Munging.R")
source("02 Exploratory Analysis.R")
#Stan model normal for females---------------------
year_id <- ind$year.id
state_id <- ind$state.id
imr <- (ind$Female)
percap <- ind$percap
N <- length(imr)
fit1 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit1, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
#extract quantiles---------------------
ind$y.upper <- NA
ind$y.lower <- NA
for(i in 1:N){
ind$y.lower[i] <- quantile(extract(fit1)$y_pred[,i], 0.25)
ind$y.upper[i] <- quantile(extract(fit1)$y_pred[,i], 0.75)
}
#plot predicted values by state for females---------------------
#blue is predicted green is actual
ind$pred <- (colMeans(extract(fit1)$y_pred))
pred <- list()
for(i in 1:30){
pred[[i]] <- ggplot(subset(ind,ind$state.id == i),
aes(Year, pred)) +
public + #geom_line()  +
geom_line(aes(Year, Female), colour = jbpal$green) +
geom_line(aes(Year,y.lower), linetype = 'dashed', alpha = 0.3) +
geom_line(aes(Year,y.upper), linetype = 'dashed', alpha = 0.3) +
scale_x_continuous(breaks = c(2005, 2012)) +
scale_y_continuous(breaks = c(0, 80), limits = c(0,80 ) ) +
geom_text(x = 2012, y = round(max(ind[ind$state.id == i,]$Female)), label = round(min(ind[ind$state.id == i,]$Female)), size = 2) +
geom_text(x = 2005, y = round(min(ind[ind$state.id == i,]$Female)), label = round(max(ind[ind$state.id == i,]$Female)), size = 2) +
labs(x = 'Year', y = 'IMR', title = unique(ind$State[ind$state.id == i])) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.grid.major = element_blank())
}
ggsave("predfem.pdf", plot = grid.arrange(grobs = pred, nrow = 6, ncol = 5), width = 17, height = 8.5)
#Posterior Predictive Check---------------------
ggplot(ind, aes(pred, Female)) + public + geom_abline(slope = 1, intercept = 0) + geom_errorbarh(data = ind, aes(y = Female, x = pred, xmin = y.lower, xmax = y.upper)) + geom_point() + ggtitle("Posterior Predictive Check on Females") + xlim(c(0,80)) + ylim(c(0,80))
ggsave("postpredfem.pdf", width = 17, height = 8.5)
#Male pred model---------------------
year_id <- ind$year.id
state_id <- ind$state.id
imr <- (ind$Male)
percap <- ind$percap
N <- length(imr)
fitm <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fitm, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
#extract quantiles---------------------
ind$y.upperm <- NA
ind$y.lowerm <- NA
for(i in 1:N){
ind$y.lowerm[i] <- quantile(extract(fitm)$y_pred[,i], 0.25)
ind$y.upperm[i] <- quantile(extract(fitm)$y_pred[,i], 0.75)
}
#plot predicted values by state for males
#blue is predicted green is actual
ind$predm <- (colMeans(extract(fitm)$y_pred))
predm <- list()
for(i in 1:30){
predm[[i]] <- ggplot(subset(ind,ind$state.id == i),
aes(Year, predm)) +
public + #geom_line()  +
geom_line(aes(Year, Male), colour = jbpal$green) +
geom_line(aes(Year,y.lowerm), linetype = 'dashed', alpha = 0.3) +
geom_line(aes(Year,y.upperm), linetype = 'dashed', alpha = 0.3) +
scale_x_continuous(breaks = c(2005, 2012)) +
scale_y_continuous(breaks = c(0, 80), limits = c(0,80 ) ) +
geom_text(x = 2012, y = round(max(ind[ind$state.id == i,]$Male)), label = round(min(ind[ind$state.id == i,]$Male)), size = 2) +
geom_text(x = 2005, y = round(min(ind[ind$state.id == i,]$Male)), label = round(max(ind[ind$state.id == i,]$Male)), size = 2) +
labs(x = 'Year', y = 'IMR', title = unique(ind$State[ind$state.id == i])) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.grid.major = element_blank())
}
ggsave("predmal.pdf", plot = grid.arrange(grobs = predm, nrow = 6, ncol = 5), width = 17, height = 8.5)
#Posterior Predictive Check Male---------------------
ggplot(ind, aes(predm, Male)) + public + geom_abline(slope = 1, intercept = 0) + geom_errorbarh(data = ind, aes(y = Male, x = predm, xmin = y.lowerm, xmax = y.upperm)) + geom_point() + ggtitle("Posterior Predictive Check on Males") + xlim(c(0,80)) + ylim(c(0,80))
ggsave("postpredfem.pdf", width = 17, height = 8.5)
year_id <- ind$year.id
state_id <- ind$state.id
imr <- (ind$Male)
percap <- ind$percap
N <- length(imr)
fitm <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fitm, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
#extract quantiles---------------------
ind$y.upperm <- NA
ind$y.lowerm <- NA
for(i in 1:N){
ind$y.lowerm[i] <- quantile(extract(fitm)$y_pred[,i], 0.25)
ind$y.upperm[i] <- quantile(extract(fitm)$y_pred[,i], 0.75)
}
#plot predicted values by state for males
#blue is predicted green is actual
ind$predm <- (colMeans(extract(fitm)$y_pred))
predm <- list()
for(i in 1:30){
predm[[i]] <- ggplot(subset(ind,ind$state.id == i),
aes(Year, predm)) +
public + #geom_line()  +
geom_line(aes(Year, Male), colour = jbpal$green) +
geom_line(aes(Year,y.lowerm), linetype = 'dashed', alpha = 0.3) +
geom_line(aes(Year,y.upperm), linetype = 'dashed', alpha = 0.3) +
scale_x_continuous(breaks = c(2005, 2012)) +
scale_y_continuous(breaks = c(0, 80), limits = c(0,80 ) ) +
geom_text(x = 2012, y = round(max(ind[ind$state.id == i,]$Male)), label = round(min(ind[ind$state.id == i,]$Male)), size = 2) +
geom_text(x = 2005, y = round(min(ind[ind$state.id == i,]$Male)), label = round(max(ind[ind$state.id == i,]$Male)), size = 2) +
labs(x = 'Year', y = 'IMR', title = unique(ind$State[ind$state.id == i])) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.grid.major = element_blank())
}
ggsave("predmal.pdf", plot = grid.arrange(grobs = predm, nrow = 6, ncol = 5), width = 17, height = 8.5)
#Posterior Predictive Check Male---------------------
ggplot(ind, aes(predm, Male)) + public + geom_abline(slope = 1, intercept = 0) + geom_errorbarh(data = ind, aes(y = Male, x = predm, xmin = y.lowerm, xmax = y.upperm)) + geom_point() + ggtitle("Posterior Predictive Check on Males") + xlim(c(0,80)) + ylim(c(0,80))
ggsave("postpredfem.pdf", width = 17, height = 8.5)
#Run the same model on per cap exp lagged---------------------
year_id <- ind1$year.id
state_id <- ind1$state.id
imr <- log(ind1$Female)
percap <- log(ind1$lag.exp)
N <- length(imr)
fit2 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit2, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
ind1$y.upper2 <- NA
ind1$y.lower2 <- NA
for(i in 1:N){
ind1$y.lower2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.25))
ind1$y.upper2[i] <- exp(quantile(extract(fit2)$y_pred[,i], 0.75))
}
#plot predicted values by state---------------------
#blue is predicted green is actual
ind1$pred2 <- exp(colMeans(extract(fit2)$y_pred))
pred2 <- list()
for(i in 1:30){
pred2[[i]] <- ggplot(subset(ind1,ind1$state.id == i),
aes(Year, pred2)) +
public + #geom_line()  +
geom_line(aes(Year, Female), colour = jbpal$green) +
geom_line(aes(Year,y.lower2), linetype = 'dashed', alpha = 0.3) +
geom_line(aes(Year,y.upper2), linetype = 'dashed', alpha = 0.3) +
scale_x_continuous(breaks = c(2006, 2012)) +
scale_y_continuous(breaks = c(0, 90), limits = c(0,90) ) +
labs(x = 'Year', y = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
geom_text(x = 2012, y = round(max(ind1[ind1$state.id == i,]$Female)), label = round(min(ind1[ind1$state.id == i,]$Female)), size = 2) +
geom_text(x = 2006, y = round(min(ind1[ind1$state.id == i,]$Female)), label = round(max(ind1[ind1$state.id == i,]$Female)), size = 2) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.grid.major = element_blank())
}
ggsave("lagpredfem.pdf", plot = grid.arrange(grobs = pred2, nrow = 6, ncol = 5), width = 17, height = 8.5)
#Posterior Predictive Check---------------------
ggplot(ind1, aes(pred2, Female)) + public + geom_abline(slope = 1, intercept = 0) + geom_errorbarh(data = ind1, aes(y = Female, x = pred2, xmin = y.lower2, xmax = y.upper2)) + geom_point() + ggtitle("Posterior Predictive Check on Females") + xlim(c(0,90)) + ylim(c(0,90)) + xlab("Pred")
ggsave("lagpostpredfem.pdf", width = 17, height = 8.5)
#Run the same model on per cap exp lagged for boys---------------------
year_id <- ind1$year.id
state_id <- ind1$state.id
imr <- log(ind1$Male)
percap <- log(ind1$lag.exp)
N <- length(imr)
fit3 <- stan("normal.stan",
data = list("year_id", "state_id", "N", "imr","percap"),
iter = 2000, chains = 4)
print(fit3, pars = c("mu_alpha_s", "tau_alpha_s",
"mu_alpha_t", "tau_alpha_t",
"beta", "alpha_t"))
ind1$y.upper3 <- NA
ind1$y.lower3 <- NA
for(i in 1:N){
ind1$y.lower3[i] <- exp(quantile(extract(fit3)$y_pred[,i], 0.25))
ind1$y.upper3[i] <- exp(quantile(extract(fit3)$y_pred[,i], 0.75))
}
#plot predicted values by state---------------------
#blue is predicted green is actual
ind1$pred3 <- exp(colMeans(extract(fit3)$y_pred))
pred3 <- list()
for(i in 1:30){
pred3[[i]] <- ggplot(subset(ind1,ind1$state.id == i),
aes(Year, pred3)) +
public + #geom_line()  +
geom_line(aes(Year, Male), colour = jbpal$green) +
geom_line(aes(Year,y.lower3), linetype = 'dashed', alpha = 0.3) +
geom_line(aes(Year,y.upper3), linetype = 'dashed', alpha = 0.3) +
scale_x_continuous(breaks = c(2006, 2012)) +
scale_y_continuous(breaks = c(0, 85 ), limits = c(0,85 ) ) +
geom_text(x = 2012, y = round(max(ind1[ind1$state.id == i,]$Male)), label = round(min(ind1[ind1$state.id == i,]$Male)), size = 2) +
geom_text(x = 2006, y = round(min(ind1[ind1$state.id == i,]$Male)), label = round(max(ind1[ind1$state.id == i,]$Male)), size = 2) +
labs(x = 'Year', y = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.grid.major = element_blank())
}
ggsave("lagpredmal.pdf", plot = grid.arrange(grobs = pred3, nrow = 6, ncol = 5), width = 17, height = 8.5)
#Posterior Predictive Check---------------------
ggplot(ind1, aes(pred3, Male)) + public + geom_abline(slope = 1, intercept = 0) + geom_errorbarh(data = ind1, aes(y = Male, x = pred3, xmin = y.lower3, xmax = y.upper3)) + geom_point() + ggtitle("Posterior Predictive Check on Males") + xlim(c(0,85)) + ylim(c(0,85)) + xlab("Pred")
ggsave("lagpostpredmal.pdf", width = 17, height = 8.5)
#Look at distribution of effects by state in lagged log model---------------------
#create beta data_frame
beta_male <- data.frame(extract(fitm)$beta)
beta_female <- data.frame(extract(fit1)$beta)
dense <- list()
for(i in 1:30){
dense[[i]] <- ggplot(beta_male,
aes_(x = beta_male[,i] )) +
public + geom_density()  + xlim(-0.5,0.5) + ylim(0,9.5) +
#geom_density(data = beta_female, aes_(x = beta_female[,i]), colour = jbpal$green) +
geom_density(data = beta_female, aes_(x = beta_female[,i]), colour = jbpal$red) +
labs(x = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
geom_vline(xintercept = 0, alpha = 0.4, linetype = 2) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_blank(),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major = element_blank())
}
ggsave("standardbetas.pdf", plot = grid.arrange(grobs = dense, nrow = 6, ncol = 5), width = 17, height = 8.5)
#Look at distribution of effects by state in lagged log model---------------------
#create beta data_frame
beta_male <- data.frame(extract(fit3)$beta)
beta_female <- data.frame(extract(fit2)$beta)
dense <- list()
for(i in 1:30){
dense[[i]] <- ggplot(beta_male,
aes_(x = beta_male[,i] )) +
public + geom_density()  + xlim(-0.5,0.5) + ylim(0,9.5) +
geom_density(data = beta_female, aes_(x = beta_female[,i]), colour = jbpal$green) +
labs(x = 'IMR', title = unique(ind1$State[ind1$state.id == i])) +
geom_vline(xintercept = 0, alpha = 0.4, linetype = 2) +
theme(axis.text.x = element_text(size = 5),
axis.text.y = element_blank(),
plot.title = element_text(size = 9),
axis.title.x = element_text(size = 7),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major = element_blank())
}
ggsave("betas.pdf", plot = grid.arrange(grobs = dense, nrow = 6, ncol = 5), width = 17, height = 8.5)
alpha.per <- colMeans(extract(fit1)$alpha_t[,1:8])
alpha.per.upper <- NULL
alpha.per.lower <- NULL
for(i in 1:8){
alpha.per.upper[i] <- quantile(extract(fit1)$alpha_t[,i], 0.25)
alpha.per.lower[i] <- quantile(extract(fit1)$alpha_t[,i], 0.75)
}
alphas <- data.frame(year = c(2005:2012), alpha.per, alpha.per.upper, alpha.per.lower)
ggplot(alphas, aes(year, alpha.per))  + ylim(c(0,35)) + public +
geom_errorbar(ymin = alpha.per.lower, ymax = alpha.per.upper, colour = jbpal$green, alpha = 1, width = 0.1) + scale_x_continuous(breaks = c(2005:2012)) + theme(panel.grid.major = element_blank()) + ggtitle("Time Intercepts") + labs(x = "Year", y = "Intercept") + geom_point(size = 3)
ggsave("alphas.pdf", width = 17, height = 8.5)
